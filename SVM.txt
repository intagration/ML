import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.svm import SVC
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

data = pd.read_csv('userdata.csv')

X = data[['Age', 'Salary']].values
y = data['Purchased'].values

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

model = SVC(kernel='linear')
model.fit(X_train, y_train)

y_pred = model.predict(X_test)

print("Accuracy:", accuracy_score(y_test, y_pred))
print("Confusion Matrix:\n", confusion_matrix(y_test, y_pred))
print("Classification Report:\n", classification_report(y_test, y_pred))

def plot_svm(X, y, model, title):
    from matplotlib.colors import ListedColormap
    X1, X2 = X[:, 0], X[:, 1]
    x1_grid, x2_grid = np.meshgrid(
        np.arange(start=X1.min()-1, stop=X1.max()+1, step=0.01),
        np.arange(start=X2.min()-1, stop=X2.max()+1, step=0.01)
    )
    plt.contourf(x1_grid, x2_grid,
                 model.predict(np.array([x1_grid.ravel(), x2_grid.ravel()]).T).reshape(x1_grid.shape),
                 alpha=0.75, cmap=ListedColormap(['red', 'green']))
    plt.scatter(X1, X2, c=y, edgecolors='k', cmap=ListedColormap(['red', 'green']))
    plt.title(title)
    plt.xlabel('Age (scaled)')
    plt.ylabel('Salary (scaled)')
    plt.show()

plot_svm(X_train, y_train, model, "SVM - Training Set")
plot_svm(X_test, y_test, model, "SVM - Test Set")
